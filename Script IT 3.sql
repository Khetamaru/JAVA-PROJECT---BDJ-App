-- MySQL Script generated by MySQL Workbench
-- Fri Oct 25 09:12:14 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `idUser` INT NOT NULL,
  `level` ENUM('admin', 'bdjMember', 'cotisant', 'student') NULL,
  `surname` VARCHAR(45) NULL,
  `login` VARCHAR(45) NULL,
  `password` VARBINARY(64) NULL,
  `mail` VARCHAR(45) NULL,
  PRIMARY KEY (`idUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Equipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Equipment` (
  `idEquipment` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `status` ENUM('borrow', 'own') NULL,
  `dateRecup` DATE NULL,
  `state` VARCHAR(200) NULL,
  `origin` VARCHAR(100) NULL,
  `cfDoc` VARCHAR(45) NULL,
  `ableToBorrow` ENUM('yes', 'no') NULL,
  PRIMARY KEY (`idEquipment`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Hardware`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Hardware` (
  `idHardware` INT NOT NULL,
  `CPU` VARCHAR(45) NULL,
  `RAM` VARCHAR(45) NULL,
  `HDD` VARCHAR(45) NULL,
  `GPU` VARCHAR(45) NULL,
  `OS` VARCHAR(45) NULL,
  PRIMARY KEY (`idHardware`),
  CONSTRAINT `fk_Hardware_Equipment1`
    FOREIGN KEY (`idHardware`)
    REFERENCES `mydb`.`Equipment` (`idEquipment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`GameConsole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`GameConsole` (
  `idGameConsole` INT NOT NULL,
  `nbMaxController` INT NULL,
  `videoCable` ENUM('yes', 'no') NULL,
  `powerCable` ENUM('yes', 'no') NULL,
  `releaseDate` DATE NULL,
  `editor` VARCHAR(45) NULL,
  PRIMARY KEY (`idGameConsole`),
  INDEX `fk_GameConsole_Equipment1_idx` (`idGameConsole` ASC),
  CONSTRAINT `fk_GameConsole_Equipment1`
    FOREIGN KEY (`idGameConsole`)
    REFERENCES `mydb`.`Equipment` (`idEquipment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`BoardGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`BoardGame` (
  `idBoardGame` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  `nbMaxPlayer` INT NULL,
  `releaseDate` DATE NULL,
  `editor` VARCHAR(45) NULL,
  PRIMARY KEY (`idBoardGame`),
  CONSTRAINT `fk_BoardGame_Equipment1`
    FOREIGN KEY (`idBoardGame`)
    REFERENCES `mydb`.`Equipment` (`idEquipment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Other`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Other` (
  `idOther` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`idOther`),
  CONSTRAINT `fk_Other_Equipment1`
    FOREIGN KEY (`idOther`)
    REFERENCES `mydb`.`Equipment` (`idEquipment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`VideoGame`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VideoGame` (
  `idVideoGame` INT NOT NULL,
  `idGameConsole` INT NOT NULL,
  `nbMaxPlayer` INT NULL,
  `lan` ENUM('yes', 'no') NULL,
  `releaseDate` DATE NULL,
  `editor` VARCHAR(45) NULL,
  PRIMARY KEY (`idVideoGame`, `idGameConsole`),
  INDEX `fk_VideoGame_GameConsole1_idx` (`idGameConsole` ASC),
  CONSTRAINT `fk_VideoGame_Equipment1`
    FOREIGN KEY (`idVideoGame`)
    REFERENCES `mydb`.`Equipment` (`idEquipment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VideoGame_GameConsole1`
    FOREIGN KEY (`idGameConsole`)
    REFERENCES `mydb`.`GameConsole` (`idGameConsole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Loaning`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Loaning` (
  `IdLoaning` INT NOT NULL,
  `idUser` INT NOT NULL,
  `idEquipment` INT NOT NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  `valid` ENUM('yes', 'no') NULL,
  PRIMARY KEY (`IdLoaning`, `idUser`, `idEquipment`),
  INDEX `fk_Equipment_has_User_Equipment1_idx` (`idEquipment` ASC),
  INDEX `fk_Loaning_User1_idx` (`idUser` ASC),
  CONSTRAINT `fk_Equipment_has_User_Equipment1`
    FOREIGN KEY (`idEquipment`)
    REFERENCES `mydb`.`Equipment` (`idEquipment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Loaning_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`UserHistoric`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`UserHistoric` (
  `idUser` INT NOT NULL,
  `level` ENUM('admin', 'bdjMember', 'cotisant', 'student') NULL,
  `surname` VARCHAR(45) NULL,
  `login` VARCHAR(45) NULL,
  `password` VARBINARY(64) NULL,
  `mail` VARCHAR(45) NULL,
  `date` DATE NULL,
  PRIMARY KEY (`idUser`),
  INDEX `fk_Historic_User1_idx` (`idUser` ASC),
  CONSTRAINT `fk_Historic_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Application`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Application` (
  `idApplication` INT NOT NULL,
  `idUser` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `class` VARCHAR(45) NULL,
  `motavitionText` VARCHAR(400) NULL,
  PRIMARY KEY (`idApplication`, `idUser`),
  INDEX `fk_Application_User1_idx` (`idUser` ASC),
  CONSTRAINT `fk_Application_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Meeting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Meeting` (
  `idMeeting` INT NOT NULL,
  `idUser` INT NOT NULL,
  `linkODJ` VARCHAR(120) NULL,
  `place` VARCHAR(45) NULL,
  `date` DATE NULL,
  PRIMARY KEY (`idMeeting`, `idUser`),
  INDEX `fk_Meeting_User1_idx` (`idUser` ASC),
  CONSTRAINT `fk_Meeting_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Event` (
  `idEvent` INT NOT NULL,
  `idLoaning` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `place` VARCHAR(45) NULL,
  `date` DATE NULL,
  PRIMARY KEY (`idEvent`, `idLoaning`),
  INDEX `fk_Event_Loaning1_idx` (`idLoaning` ASC),
  CONSTRAINT `fk_Event_Loaning1`
    FOREIGN KEY (`idLoaning`)
    REFERENCES `mydb`.`Loaning` (`IdLoaning`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Repair`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Repair` (
  `idRepair` INT NOT NULL,
  `idUser` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `problem` VARCHAR(200) NULL,
  `linkFolder` VARCHAR(120) NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  PRIMARY KEY (`idRepair`, `idUser`),
  INDEX `fk_Repair_User1_idx` (`idUser` ASC),
  CONSTRAINT `fk_Repair_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Team` (
  `idTeam` INT NOT NULL,
  `idUser` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`idTeam`, `idUser`),
  CONSTRAINT `fk_Team_User1`
    FOREIGN KEY (`idUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Team_X_Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Team_X_Event` (
  `idEvent` INT NOT NULL,
  `idTeam` INT NOT NULL,
  PRIMARY KEY (`idEvent`, `idTeam`),
  INDEX `fk_Team_has_Event_Event1_idx` (`idEvent` ASC),
  INDEX `fk_Team_X_Event_Team1_idx` (`idTeam` ASC),
  CONSTRAINT `fk_Team_has_Event_Event1`
    FOREIGN KEY (`idEvent`)
    REFERENCES `mydb`.`Event` (`idEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Team_X_Event_Team1`
    FOREIGN KEY (`idTeam`)
    REFERENCES `mydb`.`Team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`RepairHistoric`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`RepairHistoric` (
  `idRepair` INT NOT NULL,
  `idUser` INT NULL,
  `name` VARCHAR(45) NULL,
  `problem` VARCHAR(200) NULL,
  `linkFolder` VARCHAR(120) NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  `date` DATE NULL,
  PRIMARY KEY (`idRepair`),
  CONSTRAINT `fk_RepairHistoric_Repair1`
    FOREIGN KEY (`idRepair`)
    REFERENCES `mydb`.`Repair` (`idRepair`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
